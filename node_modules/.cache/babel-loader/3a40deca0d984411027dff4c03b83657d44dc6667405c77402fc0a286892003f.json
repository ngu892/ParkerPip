{"ast":null,"code":"var _jsxFileName = \"/workspaces/ParkerPip/src/context/MaintenanceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaintenanceContext = /*#__PURE__*/createContext();\nexport const useMaintenance = () => {\n  _s();\n  return useContext(MaintenanceContext);\n};\n_s(useMaintenance, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const MaintenanceProvider = ({\n  children\n}) => {\n  _s2();\n  const getInitialRequests = () => {\n    const storedRequests = localStorage.getItem('maintenanceRequests');\n    return storedRequests ? JSON.parse(storedRequests) : [{\n      id: 1,\n      issue: 'Leaking pipe',\n      date: '2024-09-10',\n      status: 'Pending'\n    }, {\n      id: 2,\n      issue: 'Broken door lock',\n      date: '2024-09-11',\n      status: 'In Progress'\n    }, {\n      id: 3,\n      issue: 'Malfunctioning air conditioner',\n      date: '2024-09-12',\n      status: 'Completed'\n    }];\n  };\n  const [requests, setRequests] = useState(getInitialRequests);\n  useEffect(() => {\n    localStorage.setItem('maintenanceRequests', JSON.stringify(requests));\n  }, [requests]);\n  const updateStatus = (id, newStatus) => {\n    setRequests(prevRequests => prevRequests.map(request => request.id === id ? {\n      ...request,\n      status: newStatus\n    } : request));\n  };\n  const addRequest = newRequest => {\n    const newReq = {\n      id: requests.length + 1,\n      issue: newRequest,\n      date: new Date().toLocaleDateString(),\n      status: 'Pending'\n    };\n    setRequests([...requests, newReq]);\n  };\n  return /*#__PURE__*/_jsxDEV(MaintenanceContext.Provider, {\n    value: {\n      requests,\n      updateStatus,\n      addRequest\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(MaintenanceProvider, \"/Vw1tUdaBklWT9xreRJKSnQXpC4=\");\n_c = MaintenanceProvider;\nvar _c;\n$RefreshReg$(_c, \"MaintenanceProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","MaintenanceContext","useMaintenance","_s","MaintenanceProvider","children","_s2","getInitialRequests","storedRequests","localStorage","getItem","JSON","parse","id","issue","date","status","requests","setRequests","setItem","stringify","updateStatus","newStatus","prevRequests","map","request","addRequest","newRequest","newReq","length","Date","toLocaleDateString","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/ParkerPip/src/context/MaintenanceContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n\nconst MaintenanceContext = createContext();\n\n\nexport const useMaintenance = () => useContext(MaintenanceContext);\n\n\nexport const MaintenanceProvider = ({ children }) => {\n\n  const getInitialRequests = () => {\n    const storedRequests = localStorage.getItem('maintenanceRequests');\n    return storedRequests ? JSON.parse(storedRequests) : [\n      { id: 1, issue: 'Leaking pipe', date: '2024-09-10', status: 'Pending' },\n      { id: 2, issue: 'Broken door lock', date: '2024-09-11', status: 'In Progress' },\n      { id: 3, issue: 'Malfunctioning air conditioner', date: '2024-09-12', status: 'Completed' }\n    ];\n  };\n\n  const [requests, setRequests] = useState(getInitialRequests);\n\n  \n  useEffect(() => {\n    localStorage.setItem('maintenanceRequests', JSON.stringify(requests));\n  }, [requests]);\n\n  const updateStatus = (id, newStatus) => {\n    setRequests(prevRequests =>\n      prevRequests.map(request => \n        request.id === id ? { ...request, status: newStatus } : request\n      )\n    );\n  };\n\n  const addRequest = (newRequest) => {\n    const newReq = {\n      id: requests.length + 1,\n      issue: newRequest,\n      date: new Date().toLocaleDateString(),\n      status: 'Pending',\n    };\n    setRequests([...requests, newReq]);\n  };\n\n  return (\n    <MaintenanceContext.Provider value={{ requests, updateStatus, addRequest }}>\n      {children}\n    </MaintenanceContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9E,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC,CAAC;AAG1C,OAAO,MAAMO,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,kBAAkB,CAAC;AAAA;AAACE,EAAA,CAAtDD,cAAc;AAG3B,OAAO,MAAME,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;IAClE,OAAOF,cAAc,GAAGG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,GAAG,CACnD;MAAEK,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,cAAc;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAU,CAAC,EACvE;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAc,CAAC,EAC/E;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gCAAgC;MAAEC,IAAI,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAY,CAAC,CAC5F;EACH,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACW,kBAAkB,CAAC;EAG5DT,SAAS,CAAC,MAAM;IACdW,YAAY,CAACU,OAAO,CAAC,qBAAqB,EAAER,IAAI,CAACS,SAAS,CAACH,QAAQ,CAAC,CAAC;EACvE,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,YAAY,GAAGA,CAACR,EAAE,EAAES,SAAS,KAAK;IACtCJ,WAAW,CAACK,YAAY,IACtBA,YAAY,CAACC,GAAG,CAACC,OAAO,IACtBA,OAAO,CAACZ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGY,OAAO;MAAET,MAAM,EAAEM;IAAU,CAAC,GAAGG,OAC1D,CACF,CAAC;EACH,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,MAAM,GAAG;MACbf,EAAE,EAAEI,QAAQ,CAACY,MAAM,GAAG,CAAC;MACvBf,KAAK,EAAEa,UAAU;MACjBZ,IAAI,EAAE,IAAIe,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MACrCf,MAAM,EAAE;IACV,CAAC;IACDE,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,MAAM,CAAC,CAAC;EACpC,CAAC;EAED,oBACE5B,OAAA,CAACC,kBAAkB,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEI,YAAY;MAAEK;IAAW,CAAE;IAAArB,QAAA,EACxEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAAC/B,GAAA,CAzCWF,mBAAmB;AAAAkC,EAAA,GAAnBlC,mBAAmB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}