{"ast":null,"code":"import React,{useState}from'react';import{PropertyList}from'../assets/PropertyList';import PropertyItem from'../components/PropertyItem';import AddPropertyForm from'../components/AddPropertyForm';import EditProperty from'../components/EditProperty';import'../styles/ManageListings.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ManageListings(){const[toggleState,setToggleState]=useState(1);const[properties,setProperties]=useState(PropertyList);const[showForm,setShowForm]=useState(false);const[isEditOpen,setIsEditOpen]=useState(false);const[editingProperty,setEditingProperty]=useState(null);const toggleTab=index=>{setToggleState(index);};const activeProperties=properties.filter(item=>item.isActive);const pastProperties=properties.filter(item=>!item.isActive);const handleAddProperty=newProperty=>{const propertyWithId={...newProperty,id:properties.length+1,//assign id\nisActive:true};setProperties([...properties,propertyWithId]);setShowForm(false);//close form after submit\n};const handleEditProperty=updatedProperty=>{const updatedProperties=properties.map(property=>property.id===updatedProperty.id?updatedProperty:property);setProperties(updatedProperties);};const openEdit=property=>{if(property){setEditingProperty(property);setIsEditOpen(true);}};const closeEdit=()=>{setIsEditOpen(false);setEditingProperty(null);};const handleDeleteProperty=propertyId=>{const deletedProperties=properties.filter(property=>property.id!==propertyId);setProperties(deletedProperties);};const handleMarkAsComplete=propertyId=>{const completedProperties=properties.map(property=>property.id===propertyId?{...property,isActive:false}:property);setProperties(completedProperties);};return/*#__PURE__*/_jsxs(\"div\",{className:\"manageListings\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"listingsTitle\",children:\"My Properties\"}),/*#__PURE__*/_jsx(\"button\",{className:\"addPropertyBtn\",onClick:()=>setShowForm(!showForm),children:showForm?\"Cancel\":\"+ List Property\"}),showForm&&/*#__PURE__*/_jsx(AddPropertyForm,{onAddProperty:handleAddProperty}),/*#__PURE__*/_jsxs(\"div\",{className:\"manageListingsContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"propertyTabContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:toggleState===1?\"activeInactiveTabs activeTab\":\"activeInactiveTabs\",onClick:()=>toggleTab(1),children:\"Active Listings\"}),/*#__PURE__*/_jsx(\"div\",{className:toggleState===2?\"activeInactiveTabs activeTab\":\"activeInactiveTabs\",onClick:()=>toggleTab(2),children:\"Past Listings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"propertyContentTabs\",children:[/*#__PURE__*/_jsx(\"div\",{className:toggleState===1?\"propertyContent activeContent\":\"propertyContent\",children:activeProperties.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"noProperties\",children:\"No Properties Found.\"}):activeProperties.map((propertyItem,key)=>/*#__PURE__*/_jsx(PropertyItem,{image:propertyItem.image,address:propertyItem.address,bedrooms:propertyItem.bedrooms,bathrooms:propertyItem.bathrooms,garage:propertyItem.garage,price:propertyItem.price,showEditDeleteBtns:true,showCompleteBtn:true,editClick:()=>openEdit(propertyItem),deleteClick:()=>handleDeleteProperty(propertyItem.id),completeClick:()=>handleMarkAsComplete(propertyItem.id)},key))}),/*#__PURE__*/_jsx(\"div\",{className:toggleState===2?\"propertyContent activeContent\":\"propertyContent\",children:pastProperties.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"noProperties\",children:\"No Properties Found.\"}):pastProperties.map((propertyItem,key)=>/*#__PURE__*/_jsx(PropertyItem,{image:propertyItem.image,address:propertyItem.address,bedrooms:propertyItem.bedrooms,bathrooms:propertyItem.bathrooms,garage:propertyItem.garage,price:propertyItem.price,showRemoveBtn:true,deleteClick:()=>handleDeleteProperty(propertyItem.id)},key))})]})]}),/*#__PURE__*/_jsx(EditProperty,{isOpen:isEditOpen,close:closeEdit,property:editingProperty,save:handleEditProperty})]});}export default ManageListings;","map":{"version":3,"names":["React","useState","PropertyList","PropertyItem","AddPropertyForm","EditProperty","jsx","_jsx","jsxs","_jsxs","ManageListings","toggleState","setToggleState","properties","setProperties","showForm","setShowForm","isEditOpen","setIsEditOpen","editingProperty","setEditingProperty","toggleTab","index","activeProperties","filter","item","isActive","pastProperties","handleAddProperty","newProperty","propertyWithId","id","length","handleEditProperty","updatedProperty","updatedProperties","map","property","openEdit","closeEdit","handleDeleteProperty","propertyId","deletedProperties","handleMarkAsComplete","completedProperties","className","children","onClick","onAddProperty","propertyItem","key","image","address","bedrooms","bathrooms","garage","price","showEditDeleteBtns","showCompleteBtn","editClick","deleteClick","completeClick","showRemoveBtn","isOpen","close","save"],"sources":["/workspaces/ParkerPip/src/pages/ManageListings.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { PropertyList } from '../assets/PropertyList'\nimport PropertyItem from '../components/PropertyItem'\nimport AddPropertyForm from '../components/AddPropertyForm'\nimport EditProperty from '../components/EditProperty'\nimport '../styles/ManageListings.css'\n\nfunction ManageListings() {\n\n  const [toggleState, setToggleState] = useState(1)\n  const [properties, setProperties] = useState(PropertyList)\n  const [showForm, setShowForm] = useState(false)\n  const [isEditOpen, setIsEditOpen] = useState(false)\n  const [editingProperty, setEditingProperty] = useState(null)\n\n  const toggleTab = (index) => {\n    setToggleState(index)\n  }\n\n  const activeProperties = properties.filter(item => item.isActive)\n  const pastProperties = properties.filter(item => !item.isActive)\n\n  const handleAddProperty = (newProperty) => {\n    const propertyWithId = {\n      ...newProperty,\n      id: properties.length + 1, //assign id\n      isActive: true,\n    }\n    setProperties([...properties, propertyWithId])\n    setShowForm(false) //close form after submit\n  }\n\n  const handleEditProperty = (updatedProperty) => {\n    const updatedProperties = properties.map((property) =>\n      property.id === updatedProperty.id ? updatedProperty : property\n    )\n    setProperties(updatedProperties)\n  }\n\n  const openEdit = (property) => {\n    if (property) {\n      setEditingProperty(property)\n      setIsEditOpen(true)\n    }\n  }\n\n  const closeEdit = () => {\n    setIsEditOpen(false)\n    setEditingProperty(null)\n  }\n\n  const handleDeleteProperty = (propertyId) => {\n    const deletedProperties = properties.filter(property => property.id !== propertyId)\n    setProperties(deletedProperties)\n  }\n\n  const handleMarkAsComplete = (propertyId) => {\n    const completedProperties = properties.map(property => \n      property.id === propertyId ? { ...property, isActive: false } : property\n    )\n    setProperties(completedProperties)\n  }\n\n  return (\n    <div className=\"manageListings\">\n      <h1 className=\"listingsTitle\">My Properties</h1>\n\n      <button className=\"addPropertyBtn\" onClick={() => setShowForm(!showForm)}>\n        {showForm ? \"Cancel\" : \"+ List Property\"}\n      </button>\n      {showForm && <AddPropertyForm onAddProperty={handleAddProperty}/>}\n\n      <div className=\"manageListingsContainer\">\n\n        <div className=\"propertyTabContainer\">\n          <div className={toggleState === 1 ? \"activeInactiveTabs activeTab\" : \"activeInactiveTabs\"} \n            onClick={() => toggleTab(1)}>Active Listings</div>\n          <div className={toggleState === 2 ? \"activeInactiveTabs activeTab\" : \"activeInactiveTabs\"} \n            onClick={() => toggleTab(2)}>Past Listings</div>\n        </div>\n\n        <div className=\"propertyContentTabs\">\n          <div className={toggleState === 1 ? \"propertyContent activeContent\" : \"propertyContent\"}>\n            {activeProperties.length === 0 ? (\n              <div className=\"noProperties\">No Properties Found.</div>\n            ) : (\n              activeProperties.map((propertyItem, key) => (\n                <PropertyItem \n                  key={key}\n                  image={propertyItem.image} \n                  address={propertyItem.address} \n                  bedrooms={propertyItem.bedrooms} \n                  bathrooms={propertyItem.bathrooms} \n                  garage={propertyItem.garage} \n                  price={propertyItem.price}\n                  showEditDeleteBtns={true}\n                  showCompleteBtn={true}\n                  editClick={() => openEdit(propertyItem)}\n                  deleteClick={() => handleDeleteProperty(propertyItem.id)}\n                  completeClick={() => handleMarkAsComplete(propertyItem.id)}/>\n              ))\n            )}\n          </div>\n          <div className={toggleState === 2 ? \"propertyContent activeContent\" : \"propertyContent\"}>\n            {pastProperties.length === 0 ? (\n              <div className=\"noProperties\">No Properties Found.</div>\n            ) : (\n              pastProperties.map((propertyItem, key) => (\n                <PropertyItem \n                  key={key}\n                  image={propertyItem.image} \n                  address={propertyItem.address} \n                  bedrooms={propertyItem.bedrooms} \n                  bathrooms={propertyItem.bathrooms} \n                  garage={propertyItem.garage} \n                  price={propertyItem.price}\n                  showRemoveBtn={true}\n                  deleteClick={() => handleDeleteProperty(propertyItem.id)}/>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n\n      <EditProperty\n        isOpen={isEditOpen}\n        close={closeEdit}\n        property={editingProperty}\n        save={handleEditProperty}\n      />\n    </div>\n  )\n}\n\nexport default ManageListings"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}